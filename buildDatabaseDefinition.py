'''

https://github.com/maxlabelle/WebMalwareScanner

Web Malware Scanner - A malware scanner for web installations
Copyright (c) 2012-2014, Maxime Labelle
All rights reserved.
Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:
1. Redistributions of source code must retain the above copyright
   notice, this list of conditions and the following disclaimer.
2. Redistributions in binary form must reproduce the above copyright
   notice, this list of conditions and the following disclaimer in the
   documentation and/or other materials provided with the distribution.
3. All advertising materials mentioning features or use of this software
   must display the following acknowledgement:
   This product includes software developed by Maxime Labelle.
4. Neither the name of Web Malware Scanner nor the
   names of its contributors may be used to endorse or promote products
   derived from this software without specific prior written permission.
THIS SOFTWARE IS PROVIDED BY MAXIME LABELLE ''AS IS'' AND ANY
EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL MAXIME LABELLE BE LIABLE FOR ANY
DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

'''

from __future__ import division
from cefpython3 import cefpython
from ctypes import windll
from multiprocessing import Process, Queue
import wx
import time
import re
import urllib2
import uuid
import base64
import platform
import inspect
import struct
import sys
import os
import fnmatch
import stat
import json
import datetime
import mimetypes
import subprocess
import string
import hashlib
import math
import threading
import sqlite3

print "...you should not be using this!"
sys.exit()

def generateDatabaseJson():
    databaseJson = {
        'checksum': [],
        'matching': [],
        'signature_database_version': '1.0.0',
        'wms_version': '1.0'
    }

    for root, dirnames, filenames in os.walk("./signatures/checksum/"):
        for filename in fnmatch.filter(filenames, '*.json'):
            filepath = os.path.join(root, filename)
            filedata = open(filepath).read()
            hash = hashlib.md5()
            hash.update(filedata)
            filechecksum = hash.hexdigest()
            databaseJson["checksum"].append({
                'filename': filepath,
                'md5': filechecksum
            })

    for root, dirnames, filenames in os.walk("./signatures/matching/"):
        for filename in fnmatch.filter(filenames, '*.json'):
            filepath = os.path.join(root, filename)
            filedata = open(filepath).read()
            hash = hashlib.md5()
            hash.update(filedata)
            filechecksum = hash.hexdigest()
            databaseJson["matching"].append({
                'filename': filepath,
                'md5': filechecksum
            })

    with open('./signatures/database.json', 'w') as outfile:
        json.dump(databaseJson, outfile)

generateDatabaseJson()
sys.exit()
