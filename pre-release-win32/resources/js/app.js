
var LocalScanSelectedPath = false;

function setValue(key, value) {
  window.localStorage.setItem(key, value);
};

function getValue(key) {
  return window.localStorage.getItem(key);
};

function SaveSettingsOptions() {
  var options = [];
  $('.settingsOption').each(function( index, object ) {
    var value = 'FALSE';
    if ($(this).prop("checked")) {
      value = 'TRUE';
    }
    options.push({
      'option': $(this).attr('id').replace('settingsOptions_',''),
      'value': value
    });
  });
  options = btoa(JSON.stringify(options));
  WMSCoreSetSettingsOptions(options);
}

function SaveSettingsUpdates() {
  var options = [];
  $('.settingsUpdates').each(function( index, object ) {
    var value = 'FALSE';
    if ($(this).prop("checked")) {
      value = 'TRUE';
    }
    options.push({
      'option': $(this).attr('id').replace('settingsUpdates_',''),
      'value': value
    });
  });
  options = btoa(JSON.stringify(options));
  WMSCoreSetSettingsOptions(options);
}

function UpdateSettingsOptions(options) {
  options = JSON.parse(atob(options));
  for ( var index in options ) {
    if ( options[index].value == 'TRUE' ) {
      $('#settingsOptions_' + options[index].option).prop('checked', true);
    } else {
      $('#settingsOptions_' + options[index].option).prop('checked', false);
    }
  }
}

function UpdateSettingsUpdates(options) {
  options = JSON.parse(atob(options));
  for ( var index in options ) {
    if ( options[index].value == 'TRUE' ) {
      $('#settingsUpdates_' + options[index].option).prop('checked', true);
    } else {
      $('#settingsUpdates_' + options[index].option).prop('checked', false);
    }
  }
}

function setSignaturesStats(stats) {
  stats = JSON.parse(atob(stats));
  $('#MD5Signatures').html(stats.MD5Signatures);
  $('#MatchingSignatures').html(stats.MatchingSignatures);
  if (stats.DBVERSION == 'LATEST') {
    $('#DBVERSION').addClass('label-success');
    $('#DBVERSION').html('Latest version');
  }
  if (stats.WMSVERSION == 'OUTDATED') {
    $('#WMSVERSION_OUTDATED').show();
    $('#WMSVERSION').addClass('label-danger');
    $('#WMSVERSION').html('Outdated');
  } else {
    $('#WMSVERSION').html(stats.WMSVERSION);
  }
  if (stats.DBVERSION == 'OUTDATED') {
    $('#DBVERSION').addClass('label-danger');
    $('#DBVERSION').html('Outdated');
  }
  if (stats.DBVERSION == 'UNKNOWN') {
    $('#DBVERSION').addClass('label-warning');
    $('#DBVERSION').html('Unable to verify');
  }
};

function setProgress(value, action) {
  value = parseFloat(value).toFixed(2);
  $('.progress-bar').css('width', value+'%').attr('aria-valuenow', value);
  $('#LoadingAction').html(action);

  if (value == 100) {
    $("#LoadingArea").fadeOut(1500);
    window.setTimeout(function() {

      WMSCoreNavigate('main');
      WMSCoreMaximize();
    }, 1000);
  }
};

function updateLocalFileTree(jsTreeData) {
  jsTreeData = JSON.parse(atob(jsTreeData));
  $('#jstreeLocalFiles').jstree('destroy');
  $('#jstreeLocalFiles').on('changed.jstree', function( e, data ) {
    LocalScanSelectedPath = data.instance.get_path(data.node,'\\');
    WMSCoreListLocalFiles(LocalScanSelectedPath);
  }).jstree({"core": jsTreeData });
};

function StartLocalScan() {
  WMSCoreStartLocalScan(LocalScanSelectedPath);
};

function PauseScan(id_scan) {
  WMSCorePauseScan(id_scan);
};

function ResumeScan(id_scan) {
  WMSCoreResumeScan(id_scan);
};

function ViewScan(id_scan) {
  setValue('id_scan', id_scan);
  WMSCoreNavigate('viewscan');
};

function DeleteScan(id_scan) {
  WMSCoreDeleteScan(id_scan);
};

function getScanProgress(id_scan) {
  WMSCoreGetScanProgress(id_scan);
};

function UpdateScanResults(scanresults) {
  scanresults = JSON.parse(atob(scanresults));

  $('#ScanResults').html('');
  for ( index in scanresults ) {

    var row = '<tr> \
      <td>'+scanresults[index].filename+'</td> \
      <td>'+scanresults[index].malware+'</td> \
    </tr>';

    $('#ScanResults').append(row);
  }

  if (!scanresults.length) {

    var row = '<tr> \
      <td colspan="2">No results</td> \
    </tr>';

    $('#ScanResults').append(row);
  }
};

function startScanProgressTimer(id_scan) {
  window.setTimeout(WMSCoreGetScanProgress(id_scan), 500);
};

function setProgressScan(value, id_scan) {
  value = parseFloat(value).toFixed(2);
  $('#scanprogressbar').css('width', value+'%').attr('aria-valuenow', value);
  $('#scanStatusProgress').html('( '+value+' % )');
  if (parseInt(value) < 100) {
    window.setTimeout(WMSCoreGetScanProgress(id_scan), 500);
  }
};

function UpdateScanDetails(scandetails) {
  scandetails = JSON.parse(atob(scandetails));
  $('#scanStatus').html(scandetails.status);
  $('#scanPath').html(scandetails.path);
  $('#scanType').html(scandetails.type);
  if (scandetails.status == 'PENDING') {
    $('#panelHeader').removeClass('panel-primary');
    $('#panelHeader').removeClass('panel-success');
    $('#panelHeader').addClass('panel-info');
    $('#scanProgressBarContainer').hide();
  }
  if (scandetails.status == 'PAUSED') {
    $('#panelHeader').removeClass('panel-primary');
    $('#panelHeader').removeClass('panel-success');
    $('#panelHeader').addClass('panel-info');
    $('#scanProgressBarContainer').show();
    $('#PauseScanButton').hide();
    $('#ResumeScanButton').show();
  }
  if (scandetails.status == 'DONE') {
    $('#scanProgressBarContainer').hide();
    $('#panelHeader').removeClass('panel-info');
    $('#panelHeader').removeClass('panel-success');
    $('#panelHeader').addClass('panel-primary');
    $('#scanResults').show();
    $('#scanStatusProgress').html('');

    if (scandetails.infectedfound == 'yes') {
      $('#scanAlert').html('<div class="alert alert-dismissible alert-warning"> \
        <button type="button" class="close" data-dismiss="alert">&times;</button> \
        <h4>Warning!</h4> \
        <p>The scan found something...</p> \
        </div>');
    }
    if (scandetails.infectedfound == 'no') {
      $('#scanAlert').html('<div class="alert alert-dismissible alert-success"> \
        <button type="button" class="close" data-dismiss="alert">&times;</button> \
        <h4>Looking good!</h4> \
        <p>The scan did not find any malware!</p> \
        </div>');
    }
  }
  if (scandetails.status == 'ACTIVE') {
    $('#panelHeader').removeClass('panel-primary');
    $('#panelHeader').removeClass('panel-info');
    $('#panelHeader').addClass('panel-success');
    $('#scanProgressBarContainer').show();
    $('#PauseScanButton').show();
    $('#ResumeScanButton').hide();

    startScanProgressTimer(scandetails.id_scan);
  }
};

function UpdateScanList(scans) {
  scans = JSON.parse(atob(scans));
  $('#ScanList').html('');
  if (!scans.length) {
    $('#ScanList').html('<tr> \
      <td colspan="5">No scan</td> \
      </tr>');
  }
  for ( index in scans ) {
    var rowClass = '';

    if (scans[index].status == 'PENDING' || scans[index].status == 'PAUSED') {
      rowClass = 'info';
    }

    if (scans[index].status == 'ACTIVE') {
      rowClass = 'success';
    }

    var path = scans[index].path

    var row = '<tr class="'+rowClass+'"> \
      <td>'+scans[index].scandate+'</td> \
      <td>'+scans[index].status+'</td> \
      <td>'+scans[index].type+'</td> \
      <td>'+path+'</td> \
      <td class="text-right"> \
      <button class="btn btn-xs btn-default" onclick="ViewScan(\''+scans[index].id_scan+'\')"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span> View</button> \
      <button class="btn btn-xs btn-danger" onclick="DeleteScan(\''+scans[index].id_scan+'\')"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span> Delete</button> \
      </td> \
    </tr>';

    $('#ScanList').append(row);
  }
};
