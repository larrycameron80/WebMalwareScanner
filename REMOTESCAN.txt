tar.gz: signatures/, wms.py ===== new tar on each scan, to include signatures updates
https://docs.python.org/2/library/tarfile.html

paramiko upload scp tar.gz
untar in /tmp/hash/
put pid of python in tmp/hash/data.json
check pid in /proc
write progress/status to /tmp/hash/data.json
add 'errors' to scan table
if error, add 'alert-danger' with errors
errors = [{errors; msg}, ...]

pausing remote scan terminates py script
resume restart py script
closing app pause scan auto

use nohup python /tmp/hash/...

encrypt password in wms.db (use OS uuid sha256 hash as aes key ?)

insecure permissions in results: 'filename', malware: 'Insecure permissions (0777)'

/tmp/hash/wms_data.json:
{
  'status': ACTIVE|DONE
  'errors': []
  'progress': int
  'pid': int
  'results': [{filename: xxx, malware: xxx}]
  'path': str
}

timer scp download /tmp/hash/data.json

if /tmp/hash/data.json not found after nohup, error: Unable to start scan.

if pid !exists and data.json status == ACTIVE, error: Application crashed, process lost during scan.

in wms.py: when DONE, write DONE to data.json then clean up /tmp/hash/ leave data.json
in wms_gui.py: if DONE and wms_data.json downloaded, delete /tmp/hash/data.json from paramiko
